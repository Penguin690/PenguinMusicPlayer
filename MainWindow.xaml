<Window x:Class="MusicApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicApp"
        mc:Ignorable="d"
        Title="Penguin's Music Player" Height="450" Width="800" ResizeMode="NoResize" Background="#FF595959">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FF626262"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#00707070"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#B7BFC6"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF4D4D4D"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#002C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFAAAAAA"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#00ADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <EventSetter Event="MouseMove" Handler="ListViewItem_MouseMove"/>
            <EventSetter Event="DragLeave" Handler="ListViewItem_DragLeave"/>
            <EventSetter Event="DragEnter" Handler="ListViewItem_DragEnter"/>
            <EventSetter Event="Drop" Handler="ListViewItem_Drop"/>
            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid x:Name="grid">
                            <Grid.Resources>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="Gray"/>
                                    <Setter Property="Height" Value="2"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Row="0" Name="toprec" Visibility="Collapsed"/>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Grid.Row="1">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle Grid.Row="2" Name="botrec" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Margin="0, 0, -3, 0" CornerRadius="4.5">
                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonDarkCyan" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="DarkCyan"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" Margin="0 0 -5 0" CornerRadius="5 0 0 5" >
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="DarkCyan"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#00FFFFFF"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="Gray"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFA6A6A6"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#00FFFFFF"/>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <!--<Grid UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Path x:Name="ellipse" Height="9" Width="9" Data="M5,0.613C7.421,0.613 9.387,2.579 9.387,5C9.387,7.421 7.421,9.387 5,9.387L0.594,9.387C0.594,9.387 0.613,7.391 0.613,5C0.613,2.551 0.594,0.594 0.594,0.594C0.594,0.594 2.498,0.613 5,0.613Z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="0" Stretch="Fill"/>
            </Grid>-->
            <Ellipse x:Name="ellipse" Fill="{StaticResource SliderThumb.Static.Background}" Width="9" Height="9"/>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <!--<Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SliderThumb.Disabled.Background}"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Ellipse x:Name="ellipse" Fill="{StaticResource SliderThumb.Static.Background}" Width="9" Height="9"/>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Ellipse x:Name="ellipse" Fill="{StaticResource SliderThumb.Static.Background}" Width="10" Height="10"/>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background}" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="0" Height="9" Margin="0 0" Grid.Row="1" VerticalAlignment="center" CornerRadius="5">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Height="9" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center"/>
                        </Track.Thumb>
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonDarkCyan}" Height="9"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Height="9"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="3*" x:Name="ListLine"/>
            <ColumnDefinition Width="0.5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.3*"/>
            <RowDefinition/>
            <RowDefinition Height="0.3*" x:Name="NowPlayLine"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.2*" x:Name="PlayBarLine"/>
            <RowDefinition Height="0.2*"/>
            <RowDefinition Height="0.4*" x:Name="ButtonLine"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.3*" x:Name="StatusLine"/>
        </Grid.RowDefinitions>
        <Button Style="{DynamicResource ButtonStyle}" Content="Backward 10s" FontFamily="Consolas" FontSize="14" x:Name="Backward" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="6" VerticalAlignment="Stretch" Click="Backward_Click">
        </Button>
        <Button Style="{DynamicResource ButtonStyle}" Content="Play" FontFamily="Consolas" FontSize="14" x:Name="Control" Grid.Column="3" HorizontalAlignment="Stretch" Grid.Row="6" VerticalAlignment="Stretch" Click="Control_Click">

        </Button>
        <Button Style="{DynamicResource ButtonStyle}" Content="Forward 10s" FontFamily="Consolas" FontSize="14" x:Name="Forward" Grid.Column="5" HorizontalAlignment="Stretch" Grid.Row="6" VerticalAlignment="Stretch" Click="Forward_Click">
        </Button>
        <Slider x:Name="TimeBar" Style="{DynamicResource SliderStyle1}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="5" AllowDrop="True" Margin="0, 3, 0, 0" Thumb.DragStarted="TimeBar_DragStarted" Thumb.DragCompleted="TimeBar_DragCompleted"/>
        <StackPanel Grid.Column="0" Grid.ColumnSpan="9" Orientation="Horizontal" Background="#FF404040">
            <Button x:Name="AddAudio" Style="{DynamicResource ButtonStyle}" Content="Add Audio" FontFamily="Consolas" Padding="6" Margin="3, 3, 0, 3" Click="AddAudio_Click"/>
        </StackPanel>
        <StatusBar x:Name="StatusBar" Foreground="#FFA6A6A6" Background="#FF404040" Grid.Column="0" Grid.ColumnSpan="9" Grid.Row="8" FontFamily="Consolas" FontSize="15"/>
        <ListView x:Name="Listview" Background="#FFBFBFBF" Grid.Column="7" Grid.Row="1" Grid.RowSpan="7" ItemContainerStyle="{StaticResource ListViewItemStyle1}" Margin="0 5 0 5">
        </ListView>
        <Slider x:Name="VolumeBar" Grid.Column="1" Grid.ColumnSpan="5" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Width="200" Style="{StaticResource SliderStyle1}" ValueChanged="Slider_ValueChanged" Maximum="1.0" Minimum="0.0" SmallChange="0.01" LargeChange="0.05"/>
        <TextBlock x:Name="NowPlayTxt" FontSize="15" Foreground="#FFBFBFBF" FontFamily="Consolas" Grid.Column="1" HorizontalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="5" TextWrapping="Wrap" VerticalAlignment="Center"/>
        <TextBlock x:Name="VolumeValue" Foreground="#FFBFBFBF"  Grid.Column="5" HorizontalAlignment="Left" Margin="22,0,0,0" Grid.Row="7" TextWrapping="Wrap" FontSize="15" FontFamily="Consolas" VerticalAlignment="Center"/>
        <TextBlock Grid.Column="1" Foreground="#FFBFBFBF" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Row="7" TextWrapping="Wrap" VerticalAlignment="Center" Text="Volume" FontSize="15" FontFamily="Consolas"/>
        <Label Name="NowTime" FontSize="14" Foreground="#FFBFBFBF" FontFamily="Consolas" Width="71" Content="00:00:00" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Bottom" HorizontalContentAlignment="Left" Grid.Column="1"/>
        <Label Name="AllTime" Grid.Column="5" FontFamily="Consolas" Foreground="#FFBFBFBF" FontSize="14" HorizontalAlignment="Right" Grid.Row="3" VerticalAlignment="Bottom" HorizontalContentAlignment="Right"/>
    </Grid>
</Window>
